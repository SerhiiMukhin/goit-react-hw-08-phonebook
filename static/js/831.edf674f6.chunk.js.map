{"version":3,"file":"static/js/831.edf674f6.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/UserContacts/UserContacts.module.css?1fd3","components/UserContacts/UserContacts.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFindContactByName = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import React from 'react';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(contacts)\n    const form = event.target;\n    const name = form.elements.name.value.trim();\n    const number = form.elements.number.value;\n    if (contacts.some(({ name: newName }) => newName === name)) {\n      alert(`${name} is already in contacts!`);\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <input\n        type=\"text\"\n        name=\"name\"\n        className={css.input}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        placeholder=\"Enter contact name...\"\n        required\n      />\n      <input\n        type=\"tel\"\n        name=\"number\"\n        className={css.input}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        placeholder=\"Enter phone number...\"\n        required\n      />\n      <button type=\"submit\" className={css.button}>\n        Add contact\n      </button>\n    </form>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactListItem_item__UAAix\",\"button\":\"ContactListItem_button__SG6H2\",\"info\":\"ContactListItem_info__l+Z2r\",\"text\":\"ContactListItem_text__QXs1+\",\"icon\":\"ContactListItem_icon__44oEf\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './ContactListItem.module.css';\nimport { MdDeleteForever } from 'react-icons/md';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactListItem = ({ contact }) => {\nconst dispatch = useDispatch()\n\nconst handleDelete = () => dispatch(deleteContact(contact.id))\n\n  return (\n    <li className={css.item}>\n      <div className={css.info}>\n        <p className={css.text}>{contact.name}</p>\n        <p className={css.number}>{contact.number}</p>\n      </div>\n      <button\n        className={css.button}\n        type=\"button\"\n        onClick={handleDelete}\n        value={contact.id}\n      >\n        <MdDeleteForever className={css.icon}></MdDeleteForever>\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"ContactList_message__b6Via\"};","import { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectFindContactByName } from 'redux/contacts/selectors';\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectFindContactByName);\n\n  return (\n    <ul>\n      {contacts.length > 0 ? (\n        contacts.map(contact => (\n          <ContactListItem key={contact.id} contact={contact}></ContactListItem>\n        ))\n      ) : (\n        <p className={css.message}>No contacts found...</p>\n      )}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Filter_title__pSkfx\",\"input\":\"Filter_input__N7T3z\"};","import React from 'react';\nimport css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <>\n      <h3 className={css.title}>Find contacts by name</h3>\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleChange}\n        placeholder=\"Enter contact name...\"\n      />\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"UserContacts_wrapper__paKFW\",\"main_title\":\"UserContacts_main_title__-IsIA\",\"contacts_title\":\"UserContacts_contacts_title__K4MlV\"};","import { ContactForm } from \"components/ContactForm/ContactForm\"\nimport { ContactList } from \"components/ContactList/ContactList\"\nimport { Filter } from \"components/Filter/Filter\"\nimport css from './UserContacts.module.css'\n\nexport const UserContacts = () =>\n{\n    return (\n        <div className={css.wrapper}>\n        <h1 className={css.main_title}>Phonebook</h1>\n        <ContactForm />\n        <h2 className={css.contacts_title}>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    )\n}","import { UserContacts } from 'components/UserContacts/UserContacts';\nimport { useEffect } from 'react';\n// import { Helmet } from 'react-helmet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <div>{isLoading && 'Request in progress...'}</div>\n      <UserContacts></UserContacts>\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","selectFilter","filter","selectIsLoading","isLoading","selectFindContactByName","createSelector","name","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","onSubmit","event","preventDefault","console","log","form","target","elements","value","trim","number","some","alert","addContact","reset","className","css","type","pattern","title","placeholder","required","ContactListItem","contact","onClick","deleteContact","id","ContactList","length","map","Filter","onChange","setFilter","UserContacts","Contacts","useEffect","fetchContacts"],"sourceRoot":""}